version: 2.1

jobs:
  test-linux:
    parameters:
      version:
        type: string
    docker:
      - image: admwscki/kicad-kbplacer-primary:<<parameters.version>>
    steps:
      - checkout
      - run:
          name: Prepare tests
          command: |
            pip3 install --no-cache-dir -r dev-requirements.txt
      - run:
          name: Run tests
          command: |
            pytest --junitxml=test-results/pytest/results.xml tests/
      - store_test_results:
          path: test-results
      - when: # run only on master and one kicad selected version
          condition:
            and:
              - equal: [ 8.0.0-mantic, << parameters.version >> ]
              - equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Publish coverage
                command: |
                  pip3 install coveralls
                  python3 -m coveralls
  test-windows-kicad7:
    machine:
      image: windows-server-2022-gui:current
      shell: powershell.exe -ExecutionPolicy Bypass
    resource_class: windows.medium
    steps:
      - checkout
      - restore_cache:
          key: scoop-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Install scoop and KiCad
          command: |
            irm get.scoop.sh -outfile "install.ps1"
            .\install.ps1 -RunAsAdmin -ScoopDir "C:\scoop"
            scoop bucket add extras
            scoop install kicad@7.0.9
            scoop cache rm --all
      - run:
          name: Install dependencies
          command: |
            .\.circleci\scripts\use-kicad-python.ps1
            python -m pip install --upgrade pip
            pip install --no-cache-dir -r dev-requirements.txt
      - save_cache:
          key: scoop-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
          paths:
            - C:\scoop
      - run:
          name: Run tests
          command: |
            ..\.circleci\scripts\use-kicad-python.ps1
            pytest --junitxml=test-results/pytest/results.xml
          working_directory: tests
      - store_test_results:
          path: tests/test-results
  create-pcm-package:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            if [ -z "$CIRCLE_TAG" ]; then
              echo "Building development package"
            else
              echo "Building release package"
              echo "export PLUGIN_KICAD_STATUS=stable" >> $BASH_ENV
              echo "export PLUGIN_KICAD_RELEASE_URL=https://github.com/adamws/kicad-git/releases/download/v{version}/{zip_name}" >> $BASH_ENV
            fi
      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade hatch
      - run:
          name: Create zip package and repository
          environment:
            HATCH_BUILD_HOOK_ENABLE_KICAD-REPOSITORY: true
          command: |
            python -m hatch build --target kicad-package
      - store_artifacts:
          path: dist/repository
      - when: # run only on master
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - add_ssh_keys:
                fingerprints:
                  - "8f:40:c5:cb:fe:d1:a7:e1:ab:46:f6:f0:ba:4e:10:15"
            - run:
                name: Deploy repository to github pages
                command: |
                  ./release/deploy.sh

workflows:
  main:
    jobs:
      - test-linux:
          matrix:
            parameters:
              version:
                - 7.0.11-mantic
                - 8.0.0-mantic
      - test-windows-kicad7
      - create-pcm-package:
          requires:
            - test-linux
            - test-windows-kicad7
  kicad-release:
    jobs:
      - create-pcm-package:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
